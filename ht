#!/bin/sh
set -e

HT_IMG="${HT_IMG:-/dev/vda}"
HT_MAP="${HT_MAP:-HT}"
HT_DIR="${HT_DIR:-/mnt}"
HT_KEY="${HT_KEY:-hardenedtomb}"
HT_FMT="${HT_FMT:-hex}"

__exec__() { >&2 "$@" || { >&2 echo "[[[ FAIL ]]]: $@" && false; } }
__exeo__() { "$@" || { >&2 echo "[[[ FAIL ]]]: $@" && false; } }
init_disk() { cryptsetup luksFormat --hash sha512 --key-size 512 "$HT_IMG"; }
open_disk() { cryptsetup luksOpen "$HT_IMG" "$HT_MAP"; }
lock_disk() { cryptsetup luksClose "/dev/mapper/${HT_MAP}"; }
init_mapper() { mkfs.ext4 "/dev/mapper/${HT_MAP}"; }
open_mapper() { mount "/dev/mapper/${HT_MAP}" "$HT_DIR"; }
lock_mapper() { umount "/dev/mapper/${HT_MAP}"; }
kill_gpg() { 2>/dev/null killall gpg-agent || true; }
init_gpg() { gpg --homedir "${HT_DIR}/.gnupg" --quick-generate-key "$HT_KEY" default default never; }
init_git() { cd "$HT_DIR" && git init && echo '* binary' >.gitattributes && echo '.*' >.gitignore && git config --local user.email "git@${HT_KEY}"; }
save_git() { cd "$HT_DIR" && git add "$1" && git commit -m save; }
drop_git() { cd "$HT_DIR" && git reset --hard && git clean -df; }
prep_dir() { init_gpg && init_git && sync; }
test_command() { >/dev/null command -v $1; }
fenc_hex() { xxd -p; }
fdec_hex() { xxd -r -p; }
fenc_raw() { cat; }
fdec_raw() { cat; }
fenc_b64() { base64; }
fdec_b64() { base64 -d; }
fenc_der_secp256k1() { { echo 302e0201010420 && fenc_hex && echo a00706052b8104000a; } | xxd -r -p; }
fenc_pem_secp256k1() { fenc_der_secp256k1 | openssl ec -inform der; }
fenc_der_secp256r1() { { echo 30310201010420 && fenc_hex && echo a00a06082a8648ce3d030107; } | xxd -r -p; }
fenc_pem_secp256r1() { fenc_der_secp256r1 | openssl ec -inform der; }
fenc_pub_der_secp256k1() { fenc_der_secp256k1 | openssl ec -inform der -outform der -pubout; }
fenc_pub_pem_secp256k1() { fenc_der_secp256k1 | openssl ec -inform der -outform pem -pubout; }
fenc_pub_raw_secp256k1() { fenc_pub_der_secp256k1 | tail -c 64; }
fenc_pub_hex_secp256k1() { fenc_pub_raw_secp256k1 | xxd -p -c32; }
fenc_pub_der_secp256r1() { fenc_der_secp256r1 | openssl ec -inform der -outform der -pubout; }
fenc_pub_pem_secp256r1() { fenc_der_secp256k1 | openssl ec -inform der -outform pem -pubout; }
fenc_pub_raw_secp256r1() { fenc_pub_der_secp256r1 | tail -c 64; }
fenc_pub_hex_secp256r1() { fenc_pub_raw_secp256r1 | xxd -p -c32; }
fenc_pub_address_ethereum() { fenc_pub_raw_secp256k1 | openssl dgst -keccak-256 -binary | tail -c20 | xxd -p -c20 | sed "s/^/0x/"; }
fadd_data() { mkdir -p $(dirname "${HT_DIR}/$1") && "fdec_${HT_FMT}" | gpg --homedir "${HT_DIR}/.gnupg" -r "$HT_KEY" --encrypt -o "${HT_DIR}/${1}"; }
fget_data() { gpg --homedir "${HT_DIR}/.gnupg" --decrypt "${HT_DIR}/${1}" | "fenc_${HT_FMT}"; }
flst_data() { tree "${HT_DIR}/${1}" | grep -v '+' | tail -n +2 | head -n -2; }

trap "echo [[[ KILL ]]]: sigint catched >&2" INT
for v in base64 cat cryptsetup echo git gpg head killall mkfs.ext4 mount openssl sed sync tail tree umount xxd; do __exec__ test_command $v; done
case "$1" in
  disk) __exec__ init_disk ;;
  init) __exec__ open_disk && { __exec__ init_mapper && __exec__ open_mapper && { __exec__ prep_dir ||  { __exec__ kill_gpg && __
exec__ lock_mapper; } } || __exec__ lock_disk; } ;;
  open) __exec__ open_disk && { __exec__ open_mapper || __exec__ lock_disk; } ;;
  lock) __exec__ kill_gpg && __exec__ sync && { __exec__ lock_mapper || true; } && __exec__ lock_disk ;;
  addk) shift && __exec__ [[ $1 =~ ^[a-zA-Z0-9/]+$ ]] && { __exec__ fadd_data "$@" && __exec__ save_git $1; } || __exec__ drop_git ;;
  getk) shift && __exec__ [[ $1 =~ ^[a-zA-Z0-9/]+$ ]] && __exeo__ fget_data "$@" ;;
  lstk) shift && __exec__ [[ $1 =~ ^[a-zA-Z0-9/]+$ ]] && __exeo__ flst_data "$@" ;;
  *) >&2 echo "view source to see the usage at $0" && exit 1 ;;
esac
